name: Mod7CI
on: [push]                      # Will make the workflow run every time you push to any branch

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest      # Sets the build environment a machine with the latest Ubuntu installed
    steps:
    - uses: actions/checkout@v2 # Adds a step to checkout the repository code
    - name: Hello world
      run: echo 'Hello world'
    - name: Build C Sharp Code
      run: dotnet build 
    - name: Run C Sharp Tests
      run: dotnet test 
    - name: Build TS Code
      run: |
       cd DotnetTemplate.Web
       npm install
       npm run build
    - name: Run TS Linter
      run: |
        cd DotnetTemplate.Web
        npm run lint
    - name: Run TS Tests
      run: |
        cd DotnetTemplate.Web
        npm t
    - name: Slack Notification Success
      if: ${{ success() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_NOTIFY }}
    - name: Slack Notification Failure
      if: ${{ failure() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_NOTIFY }}
        SLACK_MESSAGE: "Build or tests failed!"
        SLACK_COLOR: #000000
    - name: Slack Notification Cancelled
      if: ${{ cancelled() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_NOTIFY }}
        SLACK_MESSAGE: "Build was cancelled"
  docker:
    name: Docker Push
    needs: build
    runs-on: ubuntu-latest      # Sets the build environment a machine with the latest Ubuntu installed
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    - name: Build and Push to Docker Hub
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}
        repository: georgefrancis/dotnettemplate
        tag_with_ref: true
        tags: "latest"
  heroku:
    name: Heroku deploy
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
      with:
        heroku_api_key: ${{secrets.HEROKU_KEY}}
        heroku_app_name: "gf-dotnettemplate"
        heroku_email: ${{secrets.GF_EMAIL}}